global
    daemon
    log /dev/log   local0
    log /dev/log   local1 notice
    pidfile /var/run/haproxy.pid
    nbproc  2 #no of processes
    maxconn 128000
    user root
    group root

defaults
    log    global
    option log-health-checks
    # make sure log-format is on a single line
    log-format {"type":"haproxy","timestamp":%Ts,"http_status":%ST,"http_request":"%r","remote_addr":"%ci","bytes_read":%B,"upstream_addr":"%si","backend_name":"%b","retries":%rc,"bytes_uploaded":%U,"upstream_response_time":"%Tr","upstream_connect_time":"%Tc","session_duration":"%Tt","termination_state":"%ts"}
    mode   http
    option httplog
    option dontlognull
    option forwardfor
    option http-keep-alive
    option http-tunnel
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    # errorfile 400 /etc/haproxy/errors/400.http
    # errorfile 403 /etc/haproxy/errors/403.http
    # errorfile 408 /etc/haproxy/errors/408.http
    # errorfile 500 /etc/haproxy/errors/500.http
    # errorfile 502 /etc/haproxy/errors/502.http
    # errorfile 503 /etc/haproxy/errors/503.http
    # errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind *:8080
    mode http

    {{range $subdomain := ls "/$ETCD_KEY_PREFIX"}}

    acl host_{{$subdomain}} hdr_end(host) -i {{$subdomain}}

    use_backend {{$subdomain}} if host_{{$subdomain}}

    {{end}}

{{range $subdomain := ls "/$ETCD_KEY_PREFIX"}}
backend {{$subdomain}}
    balance leastconn
    {{range $container := ls (printf "/$ETCD_KEY_PREFIX/%s" $subdomain)}}
    server {{$container}} {{printf "/$ETCD_KEY_PREFIX/%s/%s" $subdomain $container | getv}} check
    {{end}}
{{end}}

listen MyStats
    mode http
    bind 0.0.0.0:1000
    stats enable
    stats uri /
    stats refresh 5s
    stats show-node
    stats show-legends

    # if authentication is wanted
    # acl auth_ok http_auth(stats-auth)
    # http-request auth unless auth_ok

# userlist stats-auth
    # user admin insecure-password p4ss
